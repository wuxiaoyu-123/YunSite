{"ast":null,"code":"export default {\n  name: 'ImageCarousel',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n      validator: function (value) {\n        return value.every(item => item.id && item.image && item.title);\n      }\n    },\n    interval: {\n      type: Number,\n      default: 5000\n    },\n    autoplay: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      currentIndex: 0,\n      timer: null,\n      isTransitioning: false\n    };\n  },\n  computed: {\n    containerStyle() {\n      return {\n        transform: `translateX(-${this.currentIndex * 100}%)`,\n        transition: this.isTransitioning ? 'transform 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none'\n      };\n    },\n    visibleItems() {\n      // 只保留当前、前一个和后一个图片\n      const items = [...this.items];\n      const currentIndex = this.currentIndex;\n      const prevIndex = (currentIndex - 1 + items.length) % items.length;\n      const nextIndex = (currentIndex + 1) % items.length;\n      return [items[prevIndex], items[currentIndex], items[nextIndex]];\n    }\n  },\n  methods: {\n    next() {\n      if (this.isTransitioning) return;\n      this.isTransitioning = true;\n      this.currentIndex = (this.currentIndex + 1) % this.items.length;\n      this.resetTransition();\n    },\n    prev() {\n      if (this.isTransitioning) return;\n      this.isTransitioning = true;\n      this.currentIndex = this.currentIndex === 0 ? this.items.length - 1 : this.currentIndex - 1;\n      this.resetTransition();\n    },\n    goTo(index) {\n      if (this.isTransitioning || this.currentIndex === index) return;\n      this.isTransitioning = true;\n      this.currentIndex = index;\n      this.resetTransition();\n    },\n    resetTransition() {\n      setTimeout(() => {\n        this.isTransitioning = false;\n      }, 500);\n    },\n    startTimer() {\n      if (this.autoplay && !this.timer) {\n        this.timer = setInterval(this.next, this.interval);\n      }\n    },\n    stopTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    },\n    handleVisibilityChange() {\n      if (document.hidden) {\n        this.stopTimer();\n      } else {\n        this.startTimer();\n      }\n    }\n  },\n  mounted() {\n    this.startTimer();\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\n  },\n  beforeDestroy() {\n    this.stopTimer();\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n  },\n  watch: {\n    items: {\n      handler(newItems) {\n        if (this.currentIndex >= newItems.length) {\n          this.currentIndex = 0;\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["name","props","items","type","Array","required","validator","value","every","item","id","image","title","interval","Number","default","autoplay","Boolean","data","currentIndex","timer","isTransitioning","computed","containerStyle","transform","transition","visibleItems","prevIndex","length","nextIndex","methods","next","resetTransition","prev","goTo","index","setTimeout","startTimer","setInterval","stopTimer","clearInterval","handleVisibilityChange","document","hidden","mounted","addEventListener","beforeDestroy","removeEventListener","watch","handler","newItems","immediate"],"sources":["src/components/Carousel.vue"],"sourcesContent":["<template>\r\n  <div class=\"carousel\">\r\n    <div class=\"carousel-container\" :style=\"containerStyle\">\r\n      <div \r\n        v-for=\"(item, index) in visibleItems\" \r\n        :key=\"item.id\" \r\n        class=\"carousel-item\"\r\n        :class=\"{ active: currentIndex === index }\"\r\n      >\r\n        <img \r\n          :src=\"item.image\" \r\n          :alt=\"item.title\"\r\n          loading=\"lazy\"\r\n        >\r\n        <div class=\"carousel-caption\">\r\n          <h3>{{ item.title }}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"carousel-controls\">\r\n      <button class=\"control-btn prev\" @click=\"prev\">\r\n        <i class=\"el-icon-arrow-left\"></i>\r\n      </button>\r\n      <button class=\"control-btn next\" @click=\"next\">\r\n        <i class=\"el-icon-arrow-right\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"carousel-indicators\">\r\n      <span \r\n        v-for=\"(item, index) in items\" \r\n        :key=\"item.id\"\r\n        :class=\"['indicator', { active: currentIndex === index }]\"\r\n        @click=\"goTo(index)\"\r\n      ></span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ImageCarousel',\r\n  props: {\r\n    items: {\r\n      type: Array,\r\n      required: true,\r\n      validator: function(value) {\r\n        return value.every(item => item.id && item.image && item.title)\r\n      }\r\n    },\r\n    interval: {\r\n      type: Number,\r\n      default: 5000\r\n    },\r\n    autoplay: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n      timer: null,\r\n      isTransitioning: false\r\n    }\r\n  },\r\n  computed: {\r\n    containerStyle() {\r\n      return {\r\n        transform: `translateX(-${this.currentIndex * 100}%)`,\r\n        transition: this.isTransitioning ? 'transform 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'none'\r\n      }\r\n    },\r\n    visibleItems() {\r\n      // 只保留当前、前一个和后一个图片\r\n      const items = [...this.items]\r\n      const currentIndex = this.currentIndex\r\n      const prevIndex = (currentIndex - 1 + items.length) % items.length\r\n      const nextIndex = (currentIndex + 1) % items.length\r\n      \r\n      return [\r\n        items[prevIndex],\r\n        items[currentIndex],\r\n        items[nextIndex]\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    next() {\r\n      if (this.isTransitioning) return\r\n      this.isTransitioning = true\r\n      this.currentIndex = (this.currentIndex + 1) % this.items.length\r\n      this.resetTransition()\r\n    },\r\n    prev() {\r\n      if (this.isTransitioning) return\r\n      this.isTransitioning = true\r\n      this.currentIndex = this.currentIndex === 0 \r\n        ? this.items.length - 1 \r\n        : this.currentIndex - 1\r\n      this.resetTransition()\r\n    },\r\n    goTo(index) {\r\n      if (this.isTransitioning || this.currentIndex === index) return\r\n      this.isTransitioning = true\r\n      this.currentIndex = index\r\n      this.resetTransition()\r\n    },\r\n    resetTransition() {\r\n      setTimeout(() => {\r\n        this.isTransitioning = false\r\n      }, 500)\r\n    },\r\n    startTimer() {\r\n      if (this.autoplay && !this.timer) {\r\n        this.timer = setInterval(this.next, this.interval)\r\n      }\r\n    },\r\n    stopTimer() {\r\n      if (this.timer) {\r\n        clearInterval(this.timer)\r\n        this.timer = null\r\n      }\r\n    },\r\n    handleVisibilityChange() {\r\n      if (document.hidden) {\r\n        this.stopTimer()\r\n      } else {\r\n        this.startTimer()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.startTimer()\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange)\r\n  },\r\n  beforeDestroy() {\r\n    this.stopTimer()\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange)\r\n  },\r\n  watch: {\r\n    items: {\r\n      handler(newItems) {\r\n        if (this.currentIndex >= newItems.length) {\r\n          this.currentIndex = 0\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.carousel {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 500px;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: var(--card-shadow);\r\n  background: #f5f5f5;\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  height: 100%;\r\n  will-change: transform;\r\n}\r\n\r\n.carousel-item {\r\n  position: relative;\r\n  flex: 0 0 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  opacity: 0.7;\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.carousel-item.active {\r\n  opacity: 1;\r\n}\r\n\r\n.carousel-item img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transform: scale(1.02);\r\n  transition: transform 0.5s ease;\r\n  will-change: transform;\r\n}\r\n\r\n.carousel-item.active img {\r\n  transform: scale(1);\r\n}\r\n\r\n.carousel-caption {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 40px;\r\n  color: white;\r\n  z-index: 1;\r\n  background: linear-gradient(\r\n    to top,\r\n    rgba(0, 0, 0, 0.5),\r\n    transparent\r\n  );\r\n}\r\n\r\n.carousel-caption h3 {\r\n  font-size: 1.8em;\r\n  font-weight: 600;\r\n  margin: 0;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  transform: translateY(20px);\r\n  opacity: 0;\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.carousel-item.active .carousel-caption h3 {\r\n  transform: translateY(0);\r\n  opacity: 1;\r\n}\r\n\r\n.control-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 40px;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: all 0.3s ease;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.carousel:hover .control-btn {\r\n  opacity: 1;\r\n}\r\n\r\n.control-btn:hover {\r\n  background: white;\r\n  transform: translateY(-50%) scale(1.1);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.control-btn:active {\r\n  transform: translateY(-50%) scale(0.95);\r\n}\r\n\r\n.prev { left: 20px; }\r\n.next { right: 20px; }\r\n\r\n.control-btn i {\r\n  font-size: 20px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-indicators {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(8px);\r\n  z-index: 2;\r\n}\r\n\r\n.indicator {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.indicator:hover {\r\n  background: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.indicator.active {\r\n  background: white;\r\n  transform: scale(1.2);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .carousel {\r\n    height: 300px;\r\n  }\r\n  \r\n  .carousel-caption h3 {\r\n    font-size: 1.4em;\r\n  }\r\n  \r\n  .control-btn {\r\n    width: 36px;\r\n    height: 36px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAyCA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;MACAC,SAAA,WAAAA,CAAAC,KAAA;QACA,OAAAA,KAAA,CAAAC,KAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,IAAAD,IAAA,CAAAE,KAAA,IAAAF,IAAA,CAAAG,KAAA;MACA;IACA;IACAC,QAAA;MACAV,IAAA,EAAAW,MAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAb,IAAA,EAAAc,OAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,YAAA;MACAC,KAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA;QACAC,SAAA,sBAAAL,YAAA;QACAM,UAAA,OAAAJ,eAAA;MACA;IACA;IACAK,aAAA;MACA;MACA,MAAAxB,KAAA,YAAAA,KAAA;MACA,MAAAiB,YAAA,QAAAA,YAAA;MACA,MAAAQ,SAAA,IAAAR,YAAA,OAAAjB,KAAA,CAAA0B,MAAA,IAAA1B,KAAA,CAAA0B,MAAA;MACA,MAAAC,SAAA,IAAAV,YAAA,QAAAjB,KAAA,CAAA0B,MAAA;MAEA,QACA1B,KAAA,CAAAyB,SAAA,GACAzB,KAAA,CAAAiB,YAAA,GACAjB,KAAA,CAAA2B,SAAA,EACA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,SAAAV,eAAA;MACA,KAAAA,eAAA;MACA,KAAAF,YAAA,SAAAA,YAAA,aAAAjB,KAAA,CAAA0B,MAAA;MACA,KAAAI,eAAA;IACA;IACAC,KAAA;MACA,SAAAZ,eAAA;MACA,KAAAA,eAAA;MACA,KAAAF,YAAA,QAAAA,YAAA,SACA,KAAAjB,KAAA,CAAA0B,MAAA,OACA,KAAAT,YAAA;MACA,KAAAa,eAAA;IACA;IACAE,KAAAC,KAAA;MACA,SAAAd,eAAA,SAAAF,YAAA,KAAAgB,KAAA;MACA,KAAAd,eAAA;MACA,KAAAF,YAAA,GAAAgB,KAAA;MACA,KAAAH,eAAA;IACA;IACAA,gBAAA;MACAI,UAAA;QACA,KAAAf,eAAA;MACA;IACA;IACAgB,WAAA;MACA,SAAArB,QAAA,UAAAI,KAAA;QACA,KAAAA,KAAA,GAAAkB,WAAA,MAAAP,IAAA,OAAAlB,QAAA;MACA;IACA;IACA0B,UAAA;MACA,SAAAnB,KAAA;QACAoB,aAAA,MAAApB,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IACAqB,uBAAA;MACA,IAAAC,QAAA,CAAAC,MAAA;QACA,KAAAJ,SAAA;MACA;QACA,KAAAF,UAAA;MACA;IACA;EACA;EACAO,QAAA;IACA,KAAAP,UAAA;IACAK,QAAA,CAAAG,gBAAA,0BAAAJ,sBAAA;EACA;EACAK,cAAA;IACA,KAAAP,SAAA;IACAG,QAAA,CAAAK,mBAAA,0BAAAN,sBAAA;EACA;EACAO,KAAA;IACA9C,KAAA;MACA+C,QAAAC,QAAA;QACA,SAAA/B,YAAA,IAAA+B,QAAA,CAAAtB,MAAA;UACA,KAAAT,YAAA;QACA;MACA;MACAgC,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}