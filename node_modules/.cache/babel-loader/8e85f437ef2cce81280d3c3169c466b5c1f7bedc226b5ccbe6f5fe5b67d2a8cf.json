{"ast":null,"code":"export default {\n  name: 'ImageCarousel',\n  props: {\n    items: {\n      type: Array,\n      required: true\n    },\n    interval: {\n      type: Number,\n      default: 3000\n    },\n    autoplay: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      currentIndex: 0,\n      timer: null\n    };\n  },\n  computed: {\n    containerStyle() {\n      return {\n        transform: `translateX(-${this.currentIndex * 100}%)`\n      };\n    }\n  },\n  methods: {\n    next() {\n      this.currentIndex = (this.currentIndex + 1) % this.items.length;\n    },\n    prev() {\n      this.currentIndex = this.currentIndex === 0 ? this.items.length - 1 : this.currentIndex - 1;\n    },\n    goTo(index) {\n      this.currentIndex = index;\n    },\n    startTimer() {\n      if (this.autoplay) {\n        this.timer = setInterval(this.next, this.interval);\n      }\n    },\n    stopTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    }\n  },\n  mounted() {\n    this.startTimer();\n  },\n  beforeDestroy() {\n    this.stopTimer();\n  }\n};","map":{"version":3,"names":["name","props","items","type","Array","required","interval","Number","default","autoplay","Boolean","data","currentIndex","timer","computed","containerStyle","transform","methods","next","length","prev","goTo","index","startTimer","setInterval","stopTimer","clearInterval","mounted","beforeDestroy"],"sources":["src/components/Carousel.vue"],"sourcesContent":["<template>\r\n  <div class=\"carousel\">\r\n    <div class=\"carousel-container\" :style=\"containerStyle\">\r\n      <div \r\n        v-for=\"(item, index) in items\" \r\n        :key=\"index\" \r\n        class=\"carousel-item\"\r\n      >\r\n        <img :src=\"item.image\" :alt=\"item.title\">\r\n        <div class=\"carousel-caption\">\r\n          <h3>{{ item.title }}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"carousel-controls\">\r\n      <button class=\"control-btn prev\" @click=\"prev\">\r\n        <svg viewBox=\"0 0 24 24\" class=\"arrow-icon\">\r\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\r\n        </svg>\r\n      </button>\r\n      <button class=\"control-btn next\" @click=\"next\">\r\n        <svg viewBox=\"0 0 24 24\" class=\"arrow-icon\">\r\n          <path d=\"M8.59 16.59L10 18l6-6-6-6-1.41 1.41L13.17 12z\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"carousel-indicators\">\r\n      <span \r\n        v-for=\"(item, index) in items\" \r\n        :key=\"index\"\r\n        :class=\"['indicator', { active: currentIndex === index }]\"\r\n        @click=\"goTo(index)\"\r\n      ></span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ImageCarousel',\r\n  props: {\r\n    items: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    interval: {\r\n      type: Number,\r\n      default: 3000\r\n    },\r\n    autoplay: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndex: 0,\r\n      timer: null\r\n    }\r\n  },\r\n  computed: {\r\n    containerStyle() {\r\n      return {\r\n        transform: `translateX(-${this.currentIndex * 100}%)`\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    next() {\r\n      this.currentIndex = (this.currentIndex + 1) % this.items.length\r\n    },\r\n    prev() {\r\n      this.currentIndex = this.currentIndex === 0 \r\n        ? this.items.length - 1 \r\n        : this.currentIndex - 1\r\n    },\r\n    goTo(index) {\r\n      this.currentIndex = index\r\n    },\r\n    startTimer() {\r\n      if (this.autoplay) {\r\n        this.timer = setInterval(this.next, this.interval)\r\n      }\r\n    },\r\n    stopTimer() {\r\n      if (this.timer) {\r\n        clearInterval(this.timer)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.startTimer()\r\n  },\r\n  beforeDestroy() {\r\n    this.stopTimer()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.carousel {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 500px;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  height: 100%;\r\n  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.carousel-item {\r\n  position: relative;\r\n  flex: 0 0 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.carousel-item img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.carousel-item:hover img {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.carousel-caption {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 30px;\r\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));\r\n  color: white;\r\n  transform: translateY(0);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.carousel-caption h3 {\r\n  margin: 0;\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.carousel-item:hover .carousel-caption {\r\n  transform: translateY(0);\r\n}\r\n\r\n.control-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 48px;\r\n  height: 48px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n}\r\n\r\n.carousel:hover .control-btn {\r\n  opacity: 1;\r\n}\r\n\r\n.control-btn:hover {\r\n  background: white;\r\n  transform: translateY(-50%) scale(1.1);\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.control-btn:active {\r\n  transform: translateY(-50%) scale(0.95);\r\n}\r\n\r\n.prev {\r\n  left: 20px;\r\n}\r\n\r\n.next {\r\n  right: 20px;\r\n}\r\n\r\n.arrow-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  fill: #333;\r\n  transition: fill 0.3s ease;\r\n}\r\n\r\n.control-btn:hover .arrow-icon {\r\n  fill: #3498db;\r\n}\r\n\r\n.carousel-indicators {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 12px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.indicator {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.indicator:hover {\r\n  background: rgba(255, 255, 255, 0.8);\r\n  transform: scale(1.2);\r\n}\r\n\r\n.indicator.active {\r\n  background: white;\r\n  border-color: #3498db;\r\n  transform: scale(1.2);\r\n  box-shadow: 0 0 10px rgba(52, 152, 219, 0.5);\r\n}\r\n</style> "],"mappings":"AAwCA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAI,MAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAN,IAAA,EAAAO,OAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,YAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA;QACAC,SAAA,sBAAAJ,YAAA;MACA;IACA;EACA;EACAK,OAAA;IACAC,KAAA;MACA,KAAAN,YAAA,SAAAA,YAAA,aAAAV,KAAA,CAAAiB,MAAA;IACA;IACAC,KAAA;MACA,KAAAR,YAAA,QAAAA,YAAA,SACA,KAAAV,KAAA,CAAAiB,MAAA,OACA,KAAAP,YAAA;IACA;IACAS,KAAAC,KAAA;MACA,KAAAV,YAAA,GAAAU,KAAA;IACA;IACAC,WAAA;MACA,SAAAd,QAAA;QACA,KAAAI,KAAA,GAAAW,WAAA,MAAAN,IAAA,OAAAZ,QAAA;MACA;IACA;IACAmB,UAAA;MACA,SAAAZ,KAAA;QACAa,aAAA,MAAAb,KAAA;MACA;IACA;EACA;EACAc,QAAA;IACA,KAAAJ,UAAA;EACA;EACAK,cAAA;IACA,KAAAH,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}